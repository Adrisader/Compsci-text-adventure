
/**
 * Write a description of class Dor here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Table extends MapElement
{
    private int tableID;
    private String[] onTable;
    public static String name = "table";
    public String specialName;
    
    public Table(String specialName, Material type, int tableID) {
        this.specialName = specialName;
        this.type = type;
        this.tableID = tableID;
        isBroken = false;
        
        String[] tempActionList = {"break"};
        actionList = tempActionList;
    }
    
    public Table() {
        type = new Material("wood");;
        tableID = (int)(Math.random() * 1000);
        isBroken = false;
        
        String[] tempActionList = {"break"};
        actionList = tempActionList;
    }
    
    public void use(String action) {
        int index = actionIndexOf(action);
        switch(index) {
            case -1:
                // should there be something here?
                break;
            case 0:
                smash();
                break;
        }
    }   
    
    public void use(String action, MapElement tool) {
        int index = actionIndexOf(action);
        switch(index) {
            case -1:
                // should there be something here?
                break;
            case 0:
                smash(tool);
                break;
        }
    }    
    
    public void smash() {
        if (type.getStrength() < 10) {
            isBroken = true;
            System.out.print("You smash the table with your fists.");
        }
    }
    
    public void smash(MapElement item) {
        if (type.getStrength() < item.type.getStrength()) {
            isBroken = true;
            System.out.print("You smash the table with " + item + ".");
        }
    }
    
    public int getID() {
        return tableID;
    }
    
    public String getName() {
        return name;
    }
}
